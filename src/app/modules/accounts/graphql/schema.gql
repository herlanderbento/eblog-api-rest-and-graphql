scalar Date

type User {
  id: ID
  name: String
  email: String
  password: String
  create_at: Date
  update_at: Date
}

type Query {
  getAllUsers: [User!]!
}

type IAuthenticateUser {
  name: String
  email: String
}

type IAuthenticate {
  user: IAuthenticateUser
  token: String
}

input CreateUserInput {
  name: String
  email: String
  password: String
}

input AuthenticateInput {
  email: String
  password: String
}

type Mutation {
  createUser(input: CreateUserInput!): User!
  authenticateUser(input: AuthenticateInput!): IAuthenticate
}
